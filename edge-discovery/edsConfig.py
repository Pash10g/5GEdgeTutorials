import vzEdgeDiscovery
import random

##########################################################################################################################################

"""
Step 1: Authenticate to Edge discovery service

Inputs
    ----------
    appKey : str
        Application Key generated from the 5G Edge Developer Portal: https://www.verizon.com/business/5g-edge-portal/index.html

    secretKey : str
        Secret Key generated from the 5G Edge Developer Portal: https://www.verizon.com/business/5g-edge-portal/index.html

Outputs
    ----------
    access_token : str
        The response will contain an access_token property that you must include as the authorization bearer token in the header of all API requests.
        The token will be valid for one hour from when it was first issued and any further token requests during that time will return the same token.

"""
access_token=vzEdgeDiscovery.authenticate(appKey="your-key",secretKey="your-secret-key")


"""
Step 2: Generate Service Profile

Inputs
    ----------
    accessToken : str
        Authorization bearer token generated by the authenticate() method

    maxLatency : str
        The maximum allowable data latency for the application, measured in milliseconds

Outputs
    ----------
    serviceProfileId : str
        The service profile ID being associated with the service endpoint. This will be critical when creating your service registry with edge endpoints using the createServiceRegistry() method

"""
serviceProfileId=vzEdgeDiscovery.createServiceProfile(accessToken=access_token,maxLatency=40)


"""
Step 3 (OPTIONAL): Update Service Profile

Inputs
    ----------
    accessToken : str
        Authorization bearer token generated by the authenticate() method

    maxLatency : str
        The maximum allowable data latency for the application, measured in milliseconds

    serviceProfileId : str
        The service profile ID being associated with the service endpoint

Outputs
    ----------
    serviceProfileId : str
        The service profile ID being associated with the service endpoint. This will be critical when creating your service registry with edge endpoints using the createServiceRegistry() method

"""
updatedServiceProfileId=vzEdgeDiscovery.updateServiceProfile(accessToken=access_token,maxLatency=50,serviceProfileId=serviceProfileId)


"""
Step 4: Create Service Registry

Inputs
    ----------
    accessToken : str
        Authorization bearer token generated by the authenticate() method

    serviceProfileId : str
        The service profile ID being associated with the service endpoint

    carrierIps : list
        List of Carrier IP addresses (of type str), in order, to associate to service registry

    availabilityZones : list
        List of Availability Zone IDs (of type str), in order, to associate to service registry. Note that len(carrierIps)==len(availabilityZones)

    applicationId : str
        The assigned name of the application hosted that will be using the service endpoint

Outputs
    ----------
    serviceEndpointsId : str
        A unique identifier for a service endpoint

"""
myApplicationId="VZ_5G_Edge_Test_App_"+str(random.randint(0,10000)) #Create random applicationID to associate to service registry (optional)
myServiceEndpointsId=vzEdgeDiscovery.createServiceRegistry(accessToken=access_token,serviceProfileId=updatedServiceProfileId,carrierIps=["155.146.0.225","155.146.65.19","155.146.65.19"],availabilityZones=["us-east-1-wl1-bos-wlz-1","us-east-1-wl1-nyc-wlz-1","us-east-1-wl1-was-wlz-1"],applicationId=myApplicationId)


"""
Step 5: Discover Optimal Endpoints

Inputs
    ----------
    accessToken : str
        Authorization bearer token generated by the authenticate() method

    serviceEndpointsId : str
        A unique identifier for a service endpoint

    UEIdentity : str
        IPv4 address of your mobile client

Outputs
    ----------
    closestEdgeZone : str
        AWS Availability Zone ID corresponding to the optimal the 5G Edge endpoint

    closestIP : str
        Carrier IP address corresponding to the optimal 5G Edge endpoint

"""
closestZone=vzEdgeDiscovery.discoverClosestEdgeZone(accessToken=access_token,serviceEndpointsId=myServiceEndpointsId,UEIdentity="174.249.33.62")


"""
Step 6 (OPTIONAL): Modify Service Registry to Reflect Application Endpoint Change

Inputs
    ----------
    accessToken : str
        Authorization bearer token generated by the authenticate() method

    serviceProfileId : str
        The service profile ID being associated with the service endpoint

    carrierIps : list
        List of Carrier IP addresses (of type str), in order, to associate to service registry

    availabilityZones : list
        List of Availability Zone IDs (of type str), in order, to associate to service registry. Note that len(carrierIps)==len(availabilityZones)

    applicationId : str
        The assigned name of the application hosted that will be using the service endpoint

Outputs
    ----------
    serviceEndpointsId : str
        A unique identifier for a service endpoint

"""
myServiceEndpointsId=vzEdgeDiscovery.updateServiceRegistry(accessToken=access_token,serviceEndpointsId=myServiceEndpointsId,carrierIps=["155.146.11.58","155.146.65.19","155.146.65.19"],availabilityZones=["us-east-1-wl1-bos-wlz-1","us-east-1-wl1-nyc-wlz-1","us-east-1-wl1-was-wlz-1"],applicationId=myApplicationId)
closestZone=vzEdgeDiscovery.discoverClosestEdgeZone(accessToken=access_token,serviceEndpointsId=myServiceEndpointsId,UEIdentity="174.249.33.62")


"""
Step 7: Delete Service Registry

Inputs
    ----------
    accessToken : str
        Authorization bearer token generated by the authenticate() method

    serviceEndpointsId : str
        A unique identifier for a service endpoint

"""
vzEdgeDiscovery.deleteServiceRegistry(accessToken=access_token,serviceEndpointsId=myServiceEndpointsId)


"""
Step 8: Delete Service Profile

Inputs
    ----------
    accessToken : str
        Authorization bearer token generated by the authenticate() method

    serviceProfileId : str
        The service profile ID being associated with the service endpoint

"""
vzEdgeDiscovery.deleteServiceProfile(accessToken=access_token,serviceProfileId=updatedServiceProfileId)
##########################################################################################################################################
